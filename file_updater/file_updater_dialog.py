# -*- coding: utf-8 -*-
"""
/***************************************************************************
 FileUpdaterDialog
                                 A QGIS plugin
 Updates shp files to most recent version
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2022-12-12
        git sha              : $Format:%H$
        copyright            : (C) 2022 by WWE
        email                : tomw@w-wind.com.au
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.core import *

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'file_updater_dialog_base.ui'))


class FileUpdaterDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(FileUpdaterDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

    def run(self):

        self.get_list_of_files()
        self.get_list_of_layers()





    def get_list_of_files(self):
        vectorDataPath = r'C:\Users\TomW\WWE\Proj - Files\P137_WAEP\08_GIS\VectorData'
        walkData = os.walk(vectorDataPath,topdown=True)

        exclude =[]
        file_names = []
        for roots,dirs,files in walkData:
            
            dirs[:] = [d for d in dirs if d not in exclude]
            count=0
            
            for file in files:
                if file.endswith('.shp'):
                    file_low = file.lower()
                    file_names.append(file_low)

        print(file_names)

    def get_list_of_layers(self):
        layers = QgsProject.instance().mapLayers()

        for layer_id, layer in layers.items():
            layer_low = layer.name().lower()
            layer_low.append(layer_low)
            print(f' This is from QGIS: Layer Name {layer.name()} . The layer ID {layer_id}')
        print(layer_low)
